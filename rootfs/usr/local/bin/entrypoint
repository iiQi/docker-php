#!/usr/bin/env bash
set -e

REPLACE_INI_FILES=${REPLACE_INI_FILES:-"/usr/local/etc/php/conf.d/php.ini,/usr/local/etc/php-fpm.d/zz-www.conf"}
CRON_FILE=${CRON_FILE:-"/var/spool/crontab"}
CRON_USER=${CRON_USER:-"www"}
CRON_FOREGROUND=${CRON_FOREGROUND:-"off"}

if [ -f "$CRON_FILE" ]; then
  crontab -u "$CRON_USER" "$CRON_FILE"

  # 前台模式
  if [ "$CRON_FOREGROUND" = "on" ]; then
    set -- cron -f "$@"
  else
    cron
  fi
fi

replaceINI() {
  file=$1
  if [ ! -f "$file" ]; then
    return
  fi

  grep -Eo '\$\{(TZ|PHP_|FPM_)[^\}]*\}' "$file" | while IFS= read -r line; do
    eval "val=${line}"

    if [ -n "$val" ]; then
      sed -i "s#;*\([^\#]*\)$line#\1$val#g" "$file"
    fi
  done
}

if [ -n "$REPLACE_INI_FILES" ]; then
  IFS=',' read -r -a array <<<"$REPLACE_INI_FILES"
  for item in "${array[@]}"; do
    replaceINI "$item"
  done
fi

env | grep -Eo '^PHP_EXT_.*=(enable|disable)' | while IFS="=" read -r ext status; do
  ext=$(echo "${ext#PHP_EXT_}" | tr '[:upper:]' '[:lower:]')
  ini="$PHP_INI_DIR/conf.d/docker-php-ext-$ext.ini"

  if [ "enable" = "$status" ] && [ ! -f "$ini" ]; then
    docker-php-ext-enable "$ext"
  elif [ "disable" = "$status" ] && [ -f "$ini" ]; then
    rm -f "$ini"
  fi
done

if [ "${1#-}" != "$1" ] || [ "$1" = "" ]; then
  set -- "$PHP_CMD" "$@"
fi

if [ -n "$ON_START" ]; then
  bash -ec "$ON_START"
fi

exec "$@"
